<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd">
<!--suite（测试套件）为根路径，仅允许出现1次，是多个test（测试用例）的集合，以下为各属性含义及取值
    @name 必填，标记suite的名称
    @junit 选填，是否以junit模式运行，可选值（true|false） 默认值"false"
    @verbose 选填，命令行信息打印等级（与测报内容无关），可在测试代码注释中配置，可选值（1|2|3|4|5）
    @parallel 选填，是否多线程并发运行测试，可选值(false | methods | tests | classes | instances)，默认 "false"
    @thread-count 选填，填写值为正整数，当为并发执行时的线程池数量，默认为"5"
    @configfailurepolicy 一旦Before/After Class/Methods这些方法失败后，是继续执行测试还是跳过测试；可选值 (skip | continue)，默认"skip
    @annotations="javadoc" 获取注解的位置，如果为"javadoc", 则使用javadoc注解，否则使用jdk注解
    @time-out 为具体执行单元设定一个超时时间，具体参照parallel的执行单元设置；单位为毫秒
    @skipfailedinvocationcounts 是否跳过失败的调用，可选值(true | false)，默认"false"
    @data-provider-thread-count 并发执行时data-provider的线程池数量，默认为"10"
    @object-factory 一个实现IObjectFactory接口的类，用来实例测试对象
    @allow-return-values="true" 是否允许返回函数值，可选值(true | false)，默认"false"
    @preserve-order：顺序执行开关，可选值(true | false) "true"
    @group-by-instances：是否按实例分组，可选值(true | false) "false"
    @guice-stage 支持使用JSR-330的​@Inject注解​来配置运行时提供的实例
    @parent-module 和Guice框架有关，只运行一次，创建一个parent injector给所有guice injectors
    -->
<suite name="suitename" junit="false" verbose="3" parallel="false" thread-count="5" configfailurepolicy="skip"
       annotations="javadoc" time-out="10000" skipfailedinvocationcounts="true" data-provider-thread-count="5"
       object-factory="classname" allow-return-values="true" preserve-order="true" group-by-instances="false">

    <suite-files>
        <suite-file path="/path/to/suitefile1"></suite-file>
    </suite-files>
    <parameter name="par1" value="value1"></parameter>
    <parameter name="par2" value="value2"></parameter>

    <method-selectors>
        <method-selector>
            <selector-class name="classname" priority="1"></selector-class>
            <script language="java"></script>
        </method-selector>
    </method-selectors>
    <test name="testename" junit="false" verbose="3" parallel="false" thread-count="5" annotations="javadoc"
          time-out="10000" enabled="true" skipfailedinvocationcounts="true" preserve-order="true"
          allow-return-values="true">
        <parameter name="par1" value="value1"></parameter>
        <parameter name="par2" value="value2"></parameter>
        <groups>
            <define name="xxx">
                <include name="" description="" invocation-numbers=""/>
                <include name="" description="" invocation-numbers=""/>
            </define>
            <run>
                <include name=""/>
                <exclude name=""/>
            </run>
            <dependencies>
                <group name="" depends-on=""></group>
                <group name="" depends-on=""></group>
            </dependencies>
        </groups>
        <classes>
            <parameter name="par1" value="value1"></parameter>
            <parameter name="par2" value="value2"></parameter>
            <class name="classname">
                <methods>
                    <parameter name="par3" value="value3"></parameter>
                    <include name="" description="" invocation-numbers=""></include>
                    <exclude name=""></exclude>
                </methods>
                <methods></methods>
            </class>
        </classes>
        <packages>
            <package name="">
                <include name="" description="" invocation-numbers=""></include>
                <exclude name=""></exclude>
            </package>
        </packages>
    </test>
    <listeners>
        <listener class-name="classname1"/>
        <listener class-name="classname2"/>
    </listeners>
</suite>
